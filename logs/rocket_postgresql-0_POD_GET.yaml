apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-06-29T11:18:04Z"
  generateName: postgresql-
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    controller-revision-hash: postgresql-597c96cd4c
    helm.sh/chart: postgresql-11.8.2
    statefulset.kubernetes.io/pod-name: postgresql-0
  name: postgresql-0
  namespace: rocket
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: postgresql
    uid: 5d5445e4-9b64-4fc4-800f-70858f3ad3d4
  resourceVersion: "814"
  uid: 7933d758-8d38-437b-9594-145f865faf48
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: primary
              app.kubernetes.io/instance: postgresql
              app.kubernetes.io/name: postgresql
          namespaces:
          - rocket
          topologyKey: kubernetes.io/hostname
        weight: 1
  containers:
  - env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: POSTGRESQL_PORT_NUMBER
      value: "5432"
    - name: POSTGRESQL_VOLUME_DIR
      value: /bitnami/postgresql
    - name: PGDATA
      value: /bitnami/postgresql/data
    - name: POSTGRES_USER
      value: aeo
    - name: POSTGRES_POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          key: postgres-password
          name: postgresql
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: postgresql
    - name: POSTGRES_DB
      value: postgres
    - name: POSTGRESQL_ENABLE_LDAP
      value: "no"
    - name: POSTGRESQL_ENABLE_TLS
      value: "no"
    - name: POSTGRESQL_LOG_HOSTNAME
      value: "false"
    - name: POSTGRESQL_LOG_CONNECTIONS
      value: "false"
    - name: POSTGRESQL_LOG_DISCONNECTIONS
      value: "false"
    - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
      value: "off"
    - name: POSTGRESQL_CLIENT_MIN_MESSAGES
      value: error
    - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
      value: pgaudit
    - name: HOME
      value: /bitnami/postgresql/data
    - name: PGHOST
      value: localhost
    - name: PGSSLMODE
      value: prefer
    image: docker.io/bitnami/postgresql:14.5.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - exec pg_isready -U "aeo" -d "dbname=postgres" -h 127.0.0.1 -p 5432
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: postgresql
    ports:
    - containerPort: 5432
      name: tcp-postgresql
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - -e
        - |
          exec pg_isready -U "aeo" -d "dbname=postgres" -h 127.0.0.1 -p 5432
          [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
    securityContext:
      runAsUser: 1001
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /docker-entrypoint-initdb.d/
      name: custom-init-scripts
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /bitnami/postgresql
      name: data
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-b4xkv
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: postgresql-0
  nodeName: k3d-rocket-agent-0
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
  serviceAccount: default
  serviceAccountName: default
  subdomain: postgresql-hl
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: postgresql-init-scripts
    name: custom-init-scripts
  - emptyDir:
      medium: Memory
    name: dshm
  - name: data
    persistentVolumeClaim:
      claimName: postgresql-pv-claim
  - name: kube-api-access-b4xkv
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-06-29T11:18:14Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-06-29T11:18:34Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-06-29T11:18:34Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-06-29T11:18:14Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://5d584fae0ea630af300a8e249a07898995eba104275208d2980892530d57af8f
    image: docker.io/bitnami/postgresql:14.5.0
    imageID: docker.io/bitnami/postgresql@sha256:2092a1b0bed244fbfacea836da72a84bfa47a1e7b4f2b4a82dda28dc3065d6de
    lastState: {}
    name: postgresql
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-06-29T11:18:24Z"
  hostIP: 172.19.0.4
  phase: Running
  podIP: 10.42.0.6
  podIPs:
  - ip: 10.42.0.6
  qosClass: Burstable
  startTime: "2023-06-29T11:18:14Z"
